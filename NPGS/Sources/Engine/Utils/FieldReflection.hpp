#pragma once

#include <cstddef>
#include <tuple>
#include <type_traits>
#include <utility>

#include "Engine/Core/Base/Assert.h"
#include "Engine/Core/Base/Base.h"

_NPGS_BEGIN
_UTIL_BEGIN

template <std::size_t N>
struct TFieldSize
{
};

struct FAny
{
    template <typename Ty>
    operator Ty() const;
};

template <typename Ty, typename SourceBase, typename Arg>
constexpr decltype(auto) WorkaroundCast(Arg& Param) noexcept
{
    if constexpr (std::is_reference_v<SourceBase>)
    {
        return static_cast<SourceBase>(Param);
    }
    else
    {
        using Decoration = std::conditional_t<std::is_const_v<Ty>, std::add_const_t<Arg>, Arg>;
        return static_cast<Decoration&>(Param);
    }
}

// Those code is auto generated by script. Don't edit.
// Generation begin
#pragma region TieAsTuple
template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<1>) noexcept
{
    auto& [
        Ax
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<2>) noexcept
{
    auto& [
        Ax, Bx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<3>) noexcept
{
    auto& [
        Ax, Bx, Cx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<4>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<5>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<6>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<7>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<8>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<9>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<10>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<11>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<12>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<13>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<14>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<15>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<16>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<17>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<18>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<19>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<20>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<21>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<22>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<23>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<24>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<25>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<26>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<27>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<28>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<29>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<30>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<31>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<32>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<33>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<34>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<35>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<36>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<37>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<38>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<39>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<40>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<41>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<42>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<43>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<44>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<45>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<46>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<47>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<48>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<49>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<50>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<51>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<52>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<53>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<54>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<55>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<56>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<57>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<58>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<59>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<60>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<61>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<62>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<63>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<64>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<65>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<66>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<67>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<68>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<69>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<70>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<71>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<72>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<73>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<74>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<75>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<76>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<77>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<78>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<79>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<80>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<81>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<82>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<83>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<84>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<85>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<86>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<87>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<88>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<89>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<90>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<91>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<92>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<93>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<94>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<95>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<96>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<97>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw, Sw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw),
                    WorkaroundCast<StructType, decltype(Sw)>(Sw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<98>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw, Sw, Tw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw),
                    WorkaroundCast<StructType, decltype(Sw)>(Sw), WorkaroundCast<StructType, decltype(Tw)>(Tw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<99>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw, Sw, Tw, Uw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw),
                    WorkaroundCast<StructType, decltype(Sw)>(Sw), WorkaroundCast<StructType, decltype(Tw)>(Tw),
                    WorkaroundCast<StructType, decltype(Uw)>(Uw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<100>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw, Sw, Tw, Uw, Vw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw),
                    WorkaroundCast<StructType, decltype(Sw)>(Sw), WorkaroundCast<StructType, decltype(Tw)>(Tw),
                    WorkaroundCast<StructType, decltype(Uw)>(Uw), WorkaroundCast<StructType, decltype(Vw)>(Vw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<101>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw, Sw, Tw, Uw, Vw, Ww
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw),
                    WorkaroundCast<StructType, decltype(Sw)>(Sw), WorkaroundCast<StructType, decltype(Tw)>(Tw),
                    WorkaroundCast<StructType, decltype(Uw)>(Uw), WorkaroundCast<StructType, decltype(Vw)>(Vw),
                    WorkaroundCast<StructType, decltype(Ww)>(Ww));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<102>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw, Sw, Tw, Uw, Vw, Ww, Xw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw),
                    WorkaroundCast<StructType, decltype(Sw)>(Sw), WorkaroundCast<StructType, decltype(Tw)>(Tw),
                    WorkaroundCast<StructType, decltype(Uw)>(Uw), WorkaroundCast<StructType, decltype(Vw)>(Vw),
                    WorkaroundCast<StructType, decltype(Ww)>(Ww), WorkaroundCast<StructType, decltype(Xw)>(Xw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<103>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw, Sw, Tw, Uw, Vw, Ww, Xw, Yw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw),
                    WorkaroundCast<StructType, decltype(Sw)>(Sw), WorkaroundCast<StructType, decltype(Tw)>(Tw),
                    WorkaroundCast<StructType, decltype(Uw)>(Uw), WorkaroundCast<StructType, decltype(Vw)>(Vw),
                    WorkaroundCast<StructType, decltype(Ww)>(Ww), WorkaroundCast<StructType, decltype(Xw)>(Xw),
                    WorkaroundCast<StructType, decltype(Yw)>(Yw));
}

template <class StructType>
constexpr auto TieAsTuple(StructType& Value, TFieldSize<104>) noexcept
{
    auto& [
        Ax, Bx, Cx, Dx, Ex, Fx, Gx, Hx, Ix, Jx, Kx, Lx, Mx, Nx, Ox, Px, Qx, Rx, Sx, Tx, Ux, Vx, Wx, Xx, Yx, Zx,
        Ay, By, Cy, Dy, Ey, Fy, Gy, Hy, Iy, Jy, Ky, Ly, My, Ny, Oy, Py, Qy, Ry, Sy, Ty, Uy, Vy, Wy, Xy, Yy, Zy,
        Az, Bz, Cz, Dz, Ez, Fz, Gz, Hz, Iz, Jz, Kz, Lz, Mz, Nz, Oz, Pz, Qz, Rz, Sz, Tz, Uz, Vz, Wz, Xz, Yz, Zz,
        Aw, Bw, Cw, Dw, Ew, Fw, Gw, Hw, Iw, Jw, Kw, Lw, Mw, Nw, Ow, Pw, Qw, Rw, Sw, Tw, Uw, Vw, Ww, Xw, Yw, Zw
    ] = Value;

    return std::tie(WorkaroundCast<StructType, decltype(Ax)>(Ax), WorkaroundCast<StructType, decltype(Bx)>(Bx),
                    WorkaroundCast<StructType, decltype(Cx)>(Cx), WorkaroundCast<StructType, decltype(Dx)>(Dx),
                    WorkaroundCast<StructType, decltype(Ex)>(Ex), WorkaroundCast<StructType, decltype(Fx)>(Fx),
                    WorkaroundCast<StructType, decltype(Gx)>(Gx), WorkaroundCast<StructType, decltype(Hx)>(Hx),
                    WorkaroundCast<StructType, decltype(Ix)>(Ix), WorkaroundCast<StructType, decltype(Jx)>(Jx),
                    WorkaroundCast<StructType, decltype(Kx)>(Kx), WorkaroundCast<StructType, decltype(Lx)>(Lx),
                    WorkaroundCast<StructType, decltype(Mx)>(Mx), WorkaroundCast<StructType, decltype(Nx)>(Nx),
                    WorkaroundCast<StructType, decltype(Ox)>(Ox), WorkaroundCast<StructType, decltype(Px)>(Px),
                    WorkaroundCast<StructType, decltype(Qx)>(Qx), WorkaroundCast<StructType, decltype(Rx)>(Rx),
                    WorkaroundCast<StructType, decltype(Sx)>(Sx), WorkaroundCast<StructType, decltype(Tx)>(Tx),
                    WorkaroundCast<StructType, decltype(Ux)>(Ux), WorkaroundCast<StructType, decltype(Vx)>(Vx),
                    WorkaroundCast<StructType, decltype(Wx)>(Wx), WorkaroundCast<StructType, decltype(Xx)>(Xx),
                    WorkaroundCast<StructType, decltype(Yx)>(Yx), WorkaroundCast<StructType, decltype(Zx)>(Zx),
                    WorkaroundCast<StructType, decltype(Ay)>(Ay), WorkaroundCast<StructType, decltype(By)>(By),
                    WorkaroundCast<StructType, decltype(Cy)>(Cy), WorkaroundCast<StructType, decltype(Dy)>(Dy),
                    WorkaroundCast<StructType, decltype(Ey)>(Ey), WorkaroundCast<StructType, decltype(Fy)>(Fy),
                    WorkaroundCast<StructType, decltype(Gy)>(Gy), WorkaroundCast<StructType, decltype(Hy)>(Hy),
                    WorkaroundCast<StructType, decltype(Iy)>(Iy), WorkaroundCast<StructType, decltype(Jy)>(Jy),
                    WorkaroundCast<StructType, decltype(Ky)>(Ky), WorkaroundCast<StructType, decltype(Ly)>(Ly),
                    WorkaroundCast<StructType, decltype(My)>(My), WorkaroundCast<StructType, decltype(Ny)>(Ny),
                    WorkaroundCast<StructType, decltype(Oy)>(Oy), WorkaroundCast<StructType, decltype(Py)>(Py),
                    WorkaroundCast<StructType, decltype(Qy)>(Qy), WorkaroundCast<StructType, decltype(Ry)>(Ry),
                    WorkaroundCast<StructType, decltype(Sy)>(Sy), WorkaroundCast<StructType, decltype(Ty)>(Ty),
                    WorkaroundCast<StructType, decltype(Uy)>(Uy), WorkaroundCast<StructType, decltype(Vy)>(Vy),
                    WorkaroundCast<StructType, decltype(Wy)>(Wy), WorkaroundCast<StructType, decltype(Xy)>(Xy),
                    WorkaroundCast<StructType, decltype(Yy)>(Yy), WorkaroundCast<StructType, decltype(Zy)>(Zy),
                    WorkaroundCast<StructType, decltype(Az)>(Az), WorkaroundCast<StructType, decltype(Bz)>(Bz),
                    WorkaroundCast<StructType, decltype(Cz)>(Cz), WorkaroundCast<StructType, decltype(Dz)>(Dz),
                    WorkaroundCast<StructType, decltype(Ez)>(Ez), WorkaroundCast<StructType, decltype(Fz)>(Fz),
                    WorkaroundCast<StructType, decltype(Gz)>(Gz), WorkaroundCast<StructType, decltype(Hz)>(Hz),
                    WorkaroundCast<StructType, decltype(Iz)>(Iz), WorkaroundCast<StructType, decltype(Jz)>(Jz),
                    WorkaroundCast<StructType, decltype(Kz)>(Kz), WorkaroundCast<StructType, decltype(Lz)>(Lz),
                    WorkaroundCast<StructType, decltype(Mz)>(Mz), WorkaroundCast<StructType, decltype(Nz)>(Nz),
                    WorkaroundCast<StructType, decltype(Oz)>(Oz), WorkaroundCast<StructType, decltype(Pz)>(Pz),
                    WorkaroundCast<StructType, decltype(Qz)>(Qz), WorkaroundCast<StructType, decltype(Rz)>(Rz),
                    WorkaroundCast<StructType, decltype(Sz)>(Sz), WorkaroundCast<StructType, decltype(Tz)>(Tz),
                    WorkaroundCast<StructType, decltype(Uz)>(Uz), WorkaroundCast<StructType, decltype(Vz)>(Vz),
                    WorkaroundCast<StructType, decltype(Wz)>(Wz), WorkaroundCast<StructType, decltype(Xz)>(Xz),
                    WorkaroundCast<StructType, decltype(Yz)>(Yz), WorkaroundCast<StructType, decltype(Zz)>(Zz),
                    WorkaroundCast<StructType, decltype(Aw)>(Aw), WorkaroundCast<StructType, decltype(Bw)>(Bw),
                    WorkaroundCast<StructType, decltype(Cw)>(Cw), WorkaroundCast<StructType, decltype(Dw)>(Dw),
                    WorkaroundCast<StructType, decltype(Ew)>(Ew), WorkaroundCast<StructType, decltype(Fw)>(Fw),
                    WorkaroundCast<StructType, decltype(Gw)>(Gw), WorkaroundCast<StructType, decltype(Hw)>(Hw),
                    WorkaroundCast<StructType, decltype(Iw)>(Iw), WorkaroundCast<StructType, decltype(Jw)>(Jw),
                    WorkaroundCast<StructType, decltype(Kw)>(Kw), WorkaroundCast<StructType, decltype(Lw)>(Lw),
                    WorkaroundCast<StructType, decltype(Mw)>(Mw), WorkaroundCast<StructType, decltype(Nw)>(Nw),
                    WorkaroundCast<StructType, decltype(Ow)>(Ow), WorkaroundCast<StructType, decltype(Pw)>(Pw),
                    WorkaroundCast<StructType, decltype(Qw)>(Qw), WorkaroundCast<StructType, decltype(Rw)>(Rw),
                    WorkaroundCast<StructType, decltype(Sw)>(Sw), WorkaroundCast<StructType, decltype(Tw)>(Tw),
                    WorkaroundCast<StructType, decltype(Uw)>(Uw), WorkaroundCast<StructType, decltype(Vw)>(Vw),
                    WorkaroundCast<StructType, decltype(Ww)>(Ww), WorkaroundCast<StructType, decltype(Xw)>(Xw),
                    WorkaroundCast<StructType, decltype(Yw)>(Yw), WorkaroundCast<StructType, decltype(Zw)>(Zw));
}
#pragma endregion
// Generation end

// template <typename Ty, std::size_t Size>
// concept CAggregateInitializable = requires
// {
//     [] <std::size_t... Indices>(std::index_sequence<Indices...>)
//     {
//         Ty{ (static_cast<void>(Indices), FAny{})... };
//     } (std::make_index_sequence<Size>{});
// };

template <typename Ty, std::size_t... Indices>
constexpr auto IsAggregateInitializableImpl(std::index_sequence<Indices...>, int)
    -> decltype(static_cast<void>(Ty{ (static_cast<void>(Indices), FAny{})... }), std::true_type{});

template <typename Ty, std::size_t... Indices>
constexpr std::false_type IsAggregateInitializableImpl(std::index_sequence<Indices...>, ...);

template <typename Ty, std::size_t... Indices>
constexpr bool IsAggregateInitializable(std::index_sequence<Indices...> Sequence)
{
    return decltype(IsAggregateInitializableImpl<Ty>(Sequence, 0))::value;
}

template <typename Ty, std::size_t Size = 104>
constexpr std::size_t AggregateSize() noexcept
{
    if constexpr (Size == 0)
    {
        return 0;
    }
    else
    {
        using Indices = std::make_index_sequence<Size>;
        if constexpr (IsAggregateInitializable<Ty>(Indices{}))
        // if constexpr (CAggregateInitializable<Ty, Size>)
        {
            return Size;
        }
        else
        {
            return AggregateSize<Ty, Size - 1>();
        }
    }
}

template <typename Ty>
requires std::is_class_v<Ty>
constexpr auto AsTuple(Ty& Value) noexcept
{
    constexpr auto Size = AggregateSize<Ty>();
    NpgsStaticAssert(Size >= 0 && Size <= 104, "Unsuppored number of aggregate members");
    return TieAsTuple(Value, TFieldSize<Size>{});
}

template <typename Tuple, typename Func, std::size_t... Indices>
void ForEachFieldImpl(const Tuple& TupledStruct, Func&& Pred, std::index_sequence<Indices...>)
{
    (Pred(std::get<Indices>(TupledStruct), Indices), ...);
}

template <typename Tuple, typename Func>
void ForEachFieldTuple(const Tuple& TupledStruct, Func&& Pred)
{
    constexpr size_t Size = std::tuple_size_v<std::decay_t<Tuple>>;
    ForEachFieldImpl(TupledStruct, std::forward<Func>(Pred), std::make_index_sequence<Size>{});
}

template <typename Ty, typename Func>
void ForEachField(Ty& Value, Func&& Pred)
{
    auto Tuple = AsTuple(Value);
    ForEachFieldTuple(Tuple, std::forward<Func>(Pred));
}

_UTIL_END
_NPGS_END
